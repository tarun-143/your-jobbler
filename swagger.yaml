openapi: 3.0.0
info:
  title: jobs api
  contact: {}
  version: '1.0'
servers:
- url: https://your-jobbler.herokuapp.com/api/v1
  variables: {}
paths:
  /auth/register:
    post:
      tags:
      - auth
      summary: register user
      operationId: registeruser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/registeruserrequest'
              - example:
                  name: tarun
                  email: tarun@gmail.com
                  password: secret
            example:
              name: tarun
              email: tarun@gmail.com
              password: secret
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
      - auth
      summary: login user
      operationId: loginuser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/loginuserrequest'
              - example:
                  email: tarun@gmail.com
                  password: secret
            example:
              email: tarun@gmail.com
              password: secret
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /jobs:
    post:
      tags:
      - Jobs
      summary: create-job
      operationId: create-job
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/create-job-request'
              - example:
                  company: google
                  position: sde-1
            example:
              company: google
              position: sde-1
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    get:
      tags:
      - Jobs
      summary: get_all_jobs_of_user
      operationId: get_all_jobs_of_user
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The job ID.
    get:
      tags:
      - Jobs
      summary: get a job
      operationId: getajob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    patch:
      tags:
      - Jobs
      summary: update job
      operationId: updatejob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/updatejobrequest'
              - example:
                  company: hello world
                  position: front-end dev
            example:
              company: hello world
              position: front-end dev
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    delete:
      tags:
      - Jobs
      summary: delete job
      operationId: deletejob
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
components:
  schemas:
    registeruserrequest:
      title: registeruserrequest
      required:
      - name
      - email
      - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: tarun
        email: tarun@gmai.com
        password: secret
    loginuserrequest:
      title: loginuserrequest
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: rdrerwaxcn@gmail.com
        password: secret
    create-job-request:
      title: create-job-request
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: google
        position: sde-1
    updatejobrequest:
      title: updatejobrequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: hello world
        position: front-end dev
  securitySchemes:
    httpBearer:
      type: http
      scheme: bearer
security: 
- httpBearer: []
tags:
- name: auth
  description: ''
- name: Jobs
  description: ''